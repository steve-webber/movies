{"version":3,"sources":["components/images/reactMovie_logo.png","components/images/tmdb_logo.svg","components/styles/StyledHeader.js","components/elements/Header.js","config.js","components/styles/StyledHeroImage.js","components/elements/HeroImage.js","components/styles/StyledSearchBar.js","components/elements/SearchBar.js","components/styles/StyledGrid.js","components/elements/Grid.js","components/styles/StyledMovieThumb.js","components/elements/MovieThumb.js","components/styles/StyledLoadMoreBtn.js","components/elements/LoadMoreBtn.js","components/styles/StyledSpinner.js","components/elements/Spinner.js","components/Home.js","components/hooks/useHomeFetch.js","components/styles/StyledNavigation.js","components/elements/Navigation.js","components/styles/StyledMovieInfo.js","components/elements/MovieInfo.js","helpers.js","components/styles/StyledMovieInfoBar.js","components/elements/MovieInfoBar.js","components/styles/StyledActor.js","components/elements/Actor.js","components/hooks/useMovieFetch.js","components/Movie.js","components/NotFound.js","components/styles/GlobalStyle.js","components/App.js","index.js","components/images/no_image.jpg"],"names":["module","exports","StyledHeader","styled","div","StyledRMDBLogo","img","StyledTMDBLogo","Header","className","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","IMAGE_BASE_URL","SEARCH_BASE_URL","POPULAR_BASE_URL","StyledHeroImage","props","image","HeroImage","title","text","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","state","setState","timeOut","useRef","name","size","type","placeholder","onChange","event","value","target","clearTimeout","current","setTimeout","StyledGrid","StyledGridContent","Grid","header","children","StyledMovieThumb","MovieThumb","movieId","clickable","StyledLoadMoreBtn","button","LoadMoreBtn","onClick","StyledSpinner","Spinner","Home","searchTerm","setSearchTerm","movies","loading","setLoading","error","setError","fetchMovies","endpoint","a","isLoadMore","search","fetch","json","result","prev","results","heroImage","currentPage","page","totalPages","total_pages","console","log","useEffect","sessionStorage","homeState","JSON","parse","setItem","stringify","useHomeFetch","backdrop_path","original_title","overview","map","movie","key","id","poster_path","NoImage","movieName","searchEndPoint","popularEndPoint","StyledNavigation","Navigation","StyledMovieInfo","backdrop","MovieInfo","vote_average","directors","length","element","credit_id","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","StyledMovieInfoBar","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","StyledActor","Actor","actor","profile_path","character","Movie","fetchData","useCallback","creditsEndpoint","creditsResult","crew","filter","member","job","actors","cast","localStorage","useMovieFetch","NotFound","GlobalStyle","createGlobalStyle","App","path","default","ReactDOM","render","document","getElementById"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,uC,08BCEpC,IAAMC,EAAeC,IAAOC,IAAV,KAmBZC,EAAiBF,IAAOG,IAAV,KAUdC,EAAiBJ,IAAOG,IAAV,K,kCCRZE,EAXA,kBACX,kBAACN,EAAD,KACI,yBAAKO,UAAU,kBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,kBAACL,EAAD,CAAgBM,IAAKC,IAAUC,IAAI,eAEvC,kBAACN,EAAD,CAAgBI,IAAKG,IAAUD,IAAI,iB,OCdzCE,EAAU,gCACVC,EAAU,mCACVC,EAAiB,6BAEjBC,EAAe,UAAMH,EAAN,gCAAqCC,EAArC,WACfG,EAAgB,UAAMJ,EAAN,iCAAsCC,G,m0DCPrD,IAAMI,EAAkBjB,IAAOC,IAAV,KACZ,SAAAiB,GAAK,oJAOVA,EAAMC,MAPI,kBCmBNC,EAjBG,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAOE,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,KAAjB,OACd,kBAACL,EAAD,CAAiBE,MAAOA,GACpB,yBAAKb,UAAU,qBACX,yBAAKA,UAAU,kBACX,4BAAKe,GACL,2BAAIC,O,29BCRb,IAAMC,EAAkBvB,IAAOC,IAAV,KASfuB,EAAyBxB,IAAOC,IAAV,KC0BpBwB,EA9BG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACNC,mBAAS,IADH,mBACzBC,EADyB,KAClBC,EADkB,KAE1BC,EAAUC,iBAAO,MAYvB,OAAO,kBAACR,EAAD,KACH,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAalB,UAAU,YAAY0B,KAAK,SAASC,KAAK,OACtD,2BACIC,KAAK,OACLC,YAAY,mBACZC,SAhBK,SAAAC,GAAU,IACfC,EAAUD,EAAME,OAAhBD,MACRT,EAASS,GAETE,aAAaV,EAAQW,SACrBX,EAAQW,QAAUC,YAAW,WACzBhB,EAASY,KACV,MAUKA,MAAOV,O,iiCC1BhB,IAAMe,EAAa3C,IAAOC,IAAV,KAcV2C,EAAoB5C,IAAOC,IAAV,KCAf4C,EAXF,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,SAAX,OACT,kBAACJ,EAAD,KACI,4BAAKG,GACL,kBAACF,EAAD,KAAoBG,K,+nBCNrB,IAAMC,EAAmBhD,IAAOC,IAAV,KCsBdgD,EAlBI,SAAC,GAAmC,IAAjC9B,EAAgC,EAAhCA,MAAO+B,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,UAElC,OAAO,kBAACH,EAAD,KACFG,EACG,kBAAC,IAAD,CAAM5C,GAAE,WAAM2C,IACV,yBAAK5C,UAAU,YAAYE,IAAKW,EAAOT,IAAI,gBAG3C,yBAAKF,IAAKW,EAAOT,IAAI,iB,yaCZ9B,IAAM0C,EAAoBpD,IAAOqD,OAAV,KCefC,GAVK,SAAC,GAAD,IAAGhC,EAAH,EAAGA,KAAMI,EAAT,EAASA,SAAT,OAChB,kBAAC0B,EAAD,CAAmBlB,KAAK,SAASqB,QAAS7B,GACrCJ,I,8ZCPF,IAAMkC,GAAgBxD,IAAOC,IAAV,MCMXwD,GAJC,kBACZ,oCACI,kBAACD,GAAD,Q,mBCyEOE,GAzDF,WAAO,IAAD,EACqB/B,mBAAS,IAD9B,mBACRgC,EADQ,KACIC,EADJ,OCnBS,SAAAD,GAAe,IAAD,EAEZhC,mBAAS,CAAEkC,OAAQ,KAFP,mBAE/BjC,EAF+B,KAExBC,EAFwB,OAGRF,oBAAS,GAHD,mBAG/BmC,EAH+B,KAGtBC,EAHsB,OAIZpC,oBAAS,GAJG,mBAI/BqC,EAJ+B,KAIxBC,EAJwB,KAMhCC,EAAW,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DAChBH,GAAS,GACTF,GAAW,GAELM,EAAaF,EAASG,OAAO,QAJnB,kBAOgBC,MAAMJ,GAPtB,8BAOiCK,OAPjC,OAONC,EAPM,OAQZ5C,GAAS,SAAA6C,GAAI,YACNA,EADM,CAETb,QACoB,IAAhBQ,EAAA,sBACUK,EAAKb,QADf,YAC0BY,EAAOE,UADjC,YAEUF,EAAOE,SACrBC,UAAWF,EAAKE,WAAaH,EAAOE,QAAQ,GAC5CE,YAAaJ,EAAOK,KACpBC,WAAYN,EAAOO,iBAhBX,kDAmBZf,GAAS,GACTgB,QAAQC,IAAR,MApBY,QAuBhBnB,GAAW,GAvBK,0DAAH,sDAwCjB,OAdAoB,qBAAU,WACFC,eAAeC,WACfxD,EAASyD,KAAKC,MAAMH,eAAeC,YACnCtB,GAAW,IAEXG,EAAYlD,KAEjB,IAEHmE,qBAAU,WACDxB,GACDyB,eAAeI,QAAQ,YAAaF,KAAKG,UAAU7D,MAExD,CAAC+B,EAAY/B,IACT,CAAC,CAAEA,QAAOkC,UAASE,SAASE,GDnB/BwB,CAAa/B,GARF,8BAIP/B,MAASiC,EAJF,EAIEA,OAAQgB,EAJV,EAIUA,YAAaE,EAJvB,EAIuBA,WAAYH,EAJnC,EAImCA,UAC1Cd,EALO,EAKPA,QACAE,EANO,EAMPA,MACJE,EAPW,KAyBf,OAAIF,EAAc,wDACbH,EAAO,GAER,qCACMF,GAAe,kBAAC,EAAD,CACbxC,MAAK,UAAKL,GAAL,ObxCC,SawCD,OAAsC8D,EAAUe,eACrDtE,MAAOuD,EAAUgB,eACjBtE,KAAMsD,EAAUiB,WACpB,kBAAC,EAAD,CAAWnE,SAvBE,SAAA4C,GACjB,IAAMH,EAAWG,EAASvD,EAAkBuD,EAAStD,EAErD4C,EAAcU,GACdJ,EAAYC,MAoBR,kBAAC,EAAD,CAAMrB,OAAQa,EAAa,gBAAkB,kBACxCE,EAAOiC,KAAI,SAAAC,GAAK,OACb,kBAAC,EAAD,CACIC,IAAKD,EAAME,GACX9C,WAAS,EACThC,MACI4E,EAAMG,YAAN,UACSpF,GADT,ObhDR,QagDQ,OACwCiF,EAAMG,aACxCC,KAEVjD,QAAS6C,EAAME,GACfG,UAAWL,EAAMH,qBAI5B9B,GAAW,kBAAC,GAAD,MACXe,EAAcE,IAAejB,GAC1B,kBAAC,GAAD,CAAaxC,KAAK,YAAYI,SAlCnB,WACnB,IAAM2E,EAAc,UAAMtF,GAAN,OAAwB4C,EAAxB,iBAA2CkB,EAAc,GACvEyB,EAAe,UAAMtF,EAAN,iBAA+B6D,EAAc,GAClEI,QAAQC,IAAIoB,GAGZpC,EAFiBP,EAAa0C,EAAiBC,OAK5B,kBAAC,GAAD,O,wjBE9CpB,IAAMC,GAAmBvG,IAAOC,IAAV,MCkBduG,GAfI,SAAC,GAAD,IAAGT,EAAH,EAAGA,MAAH,OACf,kBAACQ,GAAD,KACI,yBAAKjG,UAAU,sBACX,kBAAC,IAAD,CAAMC,GAAG,KACL,oCAEJ,gCACA,2BAAIwF,M,kuDCTT,IAAMU,GAAkBzG,IAAOC,IAAV,MACZ,SAAAiB,GAAK,OACjBA,EAAMwF,SAAN,eACY5F,GADZ,OjBOkB,SiBPlB,OAC6CI,EAAMwF,SADnD,MAEI,UC8COC,GA3CG,SAAC,GAAe,IAAbZ,EAAY,EAAZA,MACjB,OAAO,kBAAEU,GAAF,CAAkBC,SAAUX,EAAMJ,eACrC,yBAAKrF,UAAU,qBACX,yBAAKA,UAAU,mBACX,kBAAC,EAAD,CACIa,MACI4E,EAAMG,YAAN,UACSpF,GADT,OlBFJ,QkBEI,OACwCiF,EAAMG,aACxCC,KAEVhD,WAAW,KAGnB,yBAAK7C,UAAU,kBACX,4BAAKyF,EAAM1E,OACX,oCACA,2BAAI0E,EAAMF,UACV,yBAAKvF,UAAU,mBACX,6BACI,2CACA,yBAAKA,UAAU,SAASyF,EAAMa,eAElC,yBAAKtG,UAAU,YACX,uCAAayF,EAAMc,UAAUC,OAAS,EAAI,IAAM,IAC/Cf,EAAMc,UAAUf,KAAI,SAAAiB,GAAO,OACxB,uBAAGf,IAAKe,EAAQC,WACXD,EAAQ/E,eC7B5BiF,GAAe,SAAAC,GAM1B,OALkB,IAAIC,KAAKC,aAAa,QAAS,CAC/CC,MAAO,WACPC,SAAU,MACVC,sBAAuB,IAERC,OAAON,I,m8BCXnB,IAAMO,GAAqBzH,IAAOC,IAAV,MCsChByH,GAjCM,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,QAAjB,OACjB,kBAACJ,GAAD,KACI,yBAAKnH,UAAU,wBACX,yBAAKA,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,UAAU0B,KAAK,UAAUC,KAAK,OACrD,0BAAM3B,UAAU,qBAAhB,iBFXQ,SAAAqH,GACtB,IAAMG,EAAQC,KAAKC,MAAML,EAAO,IAC1BM,EAAON,EAAO,GACpB,MAAM,GAAN,OAAUG,EAAV,aAAoBG,EAApB,KESiCC,CAASP,KAIhC,yBAAKrH,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,YAAY0B,KAAK,QAAQC,KAAK,OACrD,0BAAM3B,UAAU,qBAAhB,WACa2G,GAAaW,KAI9B,yBAAKtH,UAAU,4BACX,kBAAC,IAAD,CAAaA,UAAU,aAAa0B,KAAK,SAASC,KAAK,OACvD,0BAAM3B,UAAU,qBAAhB,YACc2G,GAAaY,Q,+gBCzBpC,IAAMM,GAAcnI,IAAOC,IAAV,MCuBTmI,GAhBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACV,kBAACF,GAAD,KACI,yBAAK3H,IAAK6H,EAAMC,aAAN,UACDxH,GADC,OvBGE,QuBHF,OAC8BuH,EAAMC,cACxCnC,KACFzF,IAAI,eAER,0BAAMJ,UAAU,cAAc+H,EAAMrG,MACpC,0BAAM1B,UAAU,mBAAmB+H,EAAME,WAP7C,M,6jBCPG,ICwCQC,GA5BD,SAAC,GAAiB,IAAD,EDZF,SAAAtF,GAAY,IAAD,EACVvB,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAENF,oBAAS,GAFH,mBAE7BmC,EAF6B,KAEpBC,EAFoB,OAGVpC,oBAAS,GAHC,mBAG7BqC,EAH6B,KAGtBC,EAHsB,KAK9BwE,EAAYC,sBAAW,sBAAC,oCAAAtE,EAAA,6DAC1BH,GAAS,GACTF,GAAW,GAFe,SAKhBI,EALgB,UAKFvD,EALE,iBAKcsC,EALd,oBAKiCrC,GALjC,SAMM0D,MAAMJ,GANZ,8BAMuBK,OANvB,cAMhBC,EANgB,OAQhBkE,EARgB,UAQK/H,EARL,iBAQqBsC,EARrB,4BAQgDrC,GARhD,UASa0D,MAAMoE,GATnB,gCASqCnE,OATrC,QAShBoE,EATgB,OAUhB/B,EAAY+B,EAAcC,KAAKC,QACjC,SAAAC,GAAM,MAAmB,aAAfA,EAAOC,OAGrBnH,EAAS,MACF4C,EADC,CAEJwE,OAAQL,EAAcM,KACtBrC,eAjBkB,kDAoBtB5C,GAAS,GApBa,QAsB1BF,GAAW,GAtBe,0DAuB3B,CAACb,IAgBJ,OAdAiC,qBAAU,WACFgE,aAAajG,IACbrB,EAASyD,KAAKC,MAAM4D,aAAajG,KACjCa,GAAW,IAEX0E,MAEL,CAACA,EAAWvF,IAEfiC,qBAAU,WACNgE,aAAa3D,QAAQtC,EAASoC,KAAKG,UAAU7D,MAE9C,CAACsB,EAAStB,IAEN,CAACA,EAAOkC,EAASE,GC/BQoF,CADL,EAAdlG,SAAc,mBACpB6C,EADoB,KACbjC,EADa,KAG3B,OAH2B,KAGT,wDACdA,EAAgB,kBAAC,GAAD,MAGhB,oCACI,kBAAC,GAAD,CAAYiC,MAAOA,EAAMH,iBACzB,kBAAC,GAAD,CAAWG,MAAOA,IAClB,kBAAC,GAAD,CACI4B,KAAM5B,EAAM6B,OACZA,OAAQ7B,EAAM6B,OACdC,QAAS9B,EAAM8B,UAEnB,kBAAC,EAAD,CAAM/E,OAAO,UACRiD,EAAMkD,OAAOnD,KAAI,SAAAuC,GAAK,OACnB,kBAAE,GAAF,CAAQrC,IAAKqC,EAAMrB,UAAWqB,MAAOA,UC5B1CgB,GAFE,kBAAM,qE,sJCAhB,IAAMC,GAAcC,YAAH,MCoBTC,GAZH,kBACR,oCACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,GAAD,CAAMC,KAAK,MACX,kBAAC,GAAD,CAAOA,KAAK,cACZ,kBAAC,GAAD,CAAUC,SAAO,KAErB,kBAACJ,GAAD,QCdRK,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,U,kBCJjDjK,EAAOC,QAAU,IAA0B,uC","file":"static/js/main.b4ca2dd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/reactMovie_logo.08494abf.png\";","module.exports = __webpack_public_path__ + \"static/media/tmdb_logo.30cd724b.svg\";","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  background: #1c1c1c;\n  padding: 0 20px;\n  box-sizing: border-box;\n\n  .header-content {\n    max-width: 1280px;\n    min-height: 120px;\n    padding: 20px 0px;\n    margin: 0 auto;\n    box-sizing: border-box;\n\n    @media screen and (max-width: 500px) {\n      max-width: 1280px;\n      min-height: 0px;\n    }\n  }\n`;\n\nexport const StyledRMDBLogo = styled.img`\n  width: 250px;\n  margin-top: 20px;\n\n  @media screen and (max-width: 500px) {\n    width: 150px;\n    margin-top: 5px;\n  }\n`;\n\nexport const StyledTMDBLogo = styled.img`\n  width: 122px;\n  margin-top: 25px;\n  float: right;\n\n  @media screen and (max-width: 500px) {\n    display: inline-block;\n    width: 80px;\n    margin-top: 0px;\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\n\nimport {\n    StyledHeader,\n    StyledRMDBLogo,\n    StyledTMDBLogo\n} from '../styles/StyledHeader';\n\nimport RMDBLogo from '../images/reactMovie_logo.png';\nimport TMDBLogo from '../images/tmdb_logo.svg';\n\nconst Header = () => (\n    <StyledHeader>\n        <div className=\"header-content\">\n            <Link to=\"/\">\n                <StyledRMDBLogo src={RMDBLogo} alt=\"rmdb-logo\" />\n            </Link>\n            <StyledTMDBLogo src={TMDBLogo} alt=\"tmdb-logo\" />\n        </div>\n    </StyledHeader>\n)\n\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '290f73c0fdb5e1eeda5885d37382685e';\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&query=`\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}`\n\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n    SEARCH_BASE_URL,\n    POPULAR_BASE_URL,\n    API_URL,\n    API_KEY,\n    IMAGE_BASE_URL,\n    BACKDROP_SIZE,\n    POSTER_SIZE\n};\n","import styled from 'styled-components';\n\nexport const StyledHeroImage = styled.div`\n  background: ${props =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), #1c1c1c`};\n  background-size: 100%, cover !important;\n  background-position: center, center !important;\n  width: 100%;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n\n  .heroimage-content {\n    max-width: 1280px;\n    padding: 20px;\n    margin: 0 auto;\n  }\n\n  .heroimage-text {\n    z-index: 100;\n    max-width: 700px;\n    position: absolute;\n    bottom: 40px;\n    margin-right: 20px;\n    min-height: 100px;\n    background: rgba(0, 0, 0, 0);\n    color: #fff;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 38px;\n        color: #fff;\n      }\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      line-height: 26px;\n      color: #fff;\n\n      @media screen and (max-width: 720px) {\n        font-size: 16px;\n        line-height: 20px;\n        color: #fff;\n      }\n    }\n\n    @media screen and (max-width: 720px) {\n      max-width: 100%;\n    }\n  }\n\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledHeroImage } from '../styles/StyledHeroImage';\n\nconst HeroImage = ({ image, title, text }) => (\n    <StyledHeroImage image={image}>\n        <div className=\"heroimage-content\">\n            <div className=\"heroimage-text\">\n                <h1>{title}</h1>\n                <p>{text}</p>\n            </div>\n        </div>\n    </StyledHeroImage>\n)\n\nHeroImage.propTypes = {\n    image: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string,\n}\n\nexport default HeroImage;","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: #1c1c1c;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: #fff;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: #353535;\n  margin: 0 auto;\n  border-radius: 40px;\n  position: relative;\n  color: #fff;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: #fff;\n    z-index: 1000;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: #fff;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n","import React, { useState, useRef } from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\n\nimport { StyledSearchBar, StyledSearchBarContent } from '../styles/StyledSearchBar';\n// import { SlowBuffer } from 'buffer';\n\nconst SearchBar = ({ callback }) => {\n    const [state, setState] = useState('');\n    const timeOut = useRef(null);\n\n    const doSearch = event => {\n        const { value } = event.target;\n        setState(value);\n\n        clearTimeout(timeOut.current);\n        timeOut.current = setTimeout(() => {\n            callback(value);\n        }, 500)\n    }\n\n    return <StyledSearchBar>\n        <StyledSearchBarContent>\n            <FontAwesome className=\"fa-search\" name=\"search\" size=\"2x\" />\n            <input\n                type=\"text\"\n                placeholder=\"Search Movie ...\"\n                onChange={doSearch}\n                value={state}\n            />\n        </StyledSearchBarContent>\n    </StyledSearchBar>\n}\n\nSearchBar.propTypes = {\n    callback: PropTypes.func,\n}\nexport default SearchBar;","import styled from 'styled-components';\n\nexport const StyledGrid = styled.div`\n  max-width: 1280px;\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    font-family: 'Abel', sans-serif;\n    font-size: 42px;\n\n    @media screen and (max-width: 768px) {\n      font-size: 22px;\n    }\n  }\n`;\n\nexport const StyledGridContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(5, minmax(100px, 1fr));\n  grid-gap: 40px;\n  position: relative;\n\n  .grid-element {\n    animation: animateGrid 0.5s;\n  }\n\n  @keyframes animateGrid {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media screen and (max-width: 1024px) {\n    grid-template-columns: repeat(4, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 768px) {\n    grid-template-columns: repeat(3, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 600px) {\n    grid-template-columns: repeat(2, minmax(100px, 1fr));\n  }\n\n  @media screen and (max-width: 375px) {\n    grid-template-columns: repeat(1, 1fr);\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledGrid, StyledGridContent } from '../styles/StyledGrid';\n\nconst Grid = ({ header, children }) => (\n    <StyledGrid>\n        <h1>{header}</h1>\n        <StyledGridContent>{children}</StyledGridContent>\n    </StyledGrid>\n\n)\n\nGrid.propTypes = {\n    header: PropTypes.string,\n}\nexport default Grid;","import styled from 'styled-components';\n\nexport const StyledMovieThumb = styled.div`\n  img {\n    width: 100%;\n    height: auto;\n    /* max-height: 350px; */\n    transition: all 0.3s;\n    object-fit: cover;\n    border-radius: 20px;\n\n    :hover {\n      opacity: 0.8;\n    }\n\n    /* @media screen and (max-width: 1024px) {\n      height: 300px;\n    }\n\n    @media screen and (max-width: 768px) {\n      height: 350px;\n    }\n\n    @media screen and (max-width: 600px) {\n      max-height: 300px;\n    }\n\n    @media screen and (max-width: 375px) {\n      max-height: 450px;\n    } */\n\n    .clickable {\n      cursor: pointer;\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport PropTypes from 'prop-types';\n\nimport { StyledMovieThumb } from '../styles/StyledMovieThumb';\n\nconst MovieThumb = ({ image, movieId, clickable }) => {\n\n    return <StyledMovieThumb>\n        {clickable ? (\n            <Link to={`/${movieId}`}>\n                <img className=\"clickable\" src={image} alt=\"moviethumb\" />\n            </Link>\n        ) : (\n                <img src={image} alt=\"moviethumb\" />\n            )}\n    </StyledMovieThumb>\n}\n\nMovieThumb.propTypes = {\n    image: PropTypes.string,\n    movieId: PropTypes.number,\n    clickable: PropTypes.bool,\n}\nexport default MovieThumb;","import styled from 'styled-components';\n\nexport const StyledLoadMoreBtn = styled.button`\n  background: #000;\n  width: 25%;\n  min-width: 200px;\n  height: 70px;\n  color: #fff;\n  cursor: pointer;\n  transition: all 0.3s;\n  border-radius: 40px;\n  font-family: 'Abel', sans-serif;\n  font-size: 28px;\n  max-width: 1280px;\n  display: block;\n  margin: 20px auto;\n  padding: 0 20px;\n  outline: none;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { StyledLoadMoreBtn } from '../styles/StyledLoadMoreBtn';\n\n\n\nconst LoadMoreBtn = ({ text, callback }) => (\n    <StyledLoadMoreBtn type=\"button\" onClick={callback}>\n        {text}\n    </StyledLoadMoreBtn>\n)\n\nLoadMoreBtn.propTypes = {\n    text: PropTypes.string,\n    callback: PropTypes.func,\n}\nexport default LoadMoreBtn;","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #16d47b; /* Blue */\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from 'react';\n\nimport { StyledSpinner } from '.././styles/StyledSpinner';\n\nconst Spinner = () => (\n    <>\n        <StyledSpinner />\n    </>)\nexport default Spinner;","import React, { useState } from 'react';\n\nimport {\n    POPULAR_BASE_URL,\n    SEARCH_BASE_URL,\n    IMAGE_BASE_URL,\n    POSTER_SIZE,\n    BACKDROP_SIZE\n} from '../config';\n\nimport { useHomeFetch } from './hooks/useHomeFetch';\n\n\nimport HeroImage from './elements/HeroImage';\nimport SearchBar from './elements/SearchBar';\nimport Grid from './elements/Grid';\nimport MovieThumb from './elements/MovieThumb';\nimport LoadMoreBtn from './elements/LoadMoreBtn';\nimport Spinner from './elements/Spinner';\nimport NoImage from './images/no_image.jpg';\n\n\nconst Home = () => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [\n        {\n            state: { movies, currentPage, totalPages, heroImage },\n            loading,\n            error },\n        fetchMovies,\n    ] = useHomeFetch(searchTerm);\n\n    const searchMovies = search => {\n        const endpoint = search ? SEARCH_BASE_URL + search : POPULAR_BASE_URL;\n\n        setSearchTerm(search);\n        fetchMovies(endpoint);\n    }\n\n    const loadMoreMovies = () => {\n        const searchEndPoint = `${SEARCH_BASE_URL}${searchTerm}&page=${currentPage + 1}`\n        const popularEndPoint = `${POPULAR_BASE_URL}&page=${currentPage + 1}`\n        console.log(popularEndPoint);\n        const endpoint = searchTerm ? searchEndPoint : popularEndPoint;\n\n        fetchMovies(endpoint);\n    }\n    if (error) return <div>Something went wrong...</div>\n    if (!movies[0]) return <Spinner />\n    return (\n        <>\n            {!searchTerm && (<HeroImage\n                image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\n                title={heroImage.original_title}\n                text={heroImage.overview} />)}\n            <SearchBar callback={searchMovies} />\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies'}>\n                {movies.map(movie => (\n                    <MovieThumb\n                        key={movie.id}\n                        clickable\n                        image={\n                            movie.poster_path\n                                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                                : NoImage\n                        }\n                        movieId={movie.id}\n                        movieName={movie.original_title}\n                    />\n                ))}\n            </Grid>\n            {loading && <Spinner />}\n            {currentPage < totalPages && !loading && (\n                <LoadMoreBtn text=\"Load More\" callback={loadMoreMovies} />\n            )}\n\n        </>\n    )\n}\nexport default Home;","import { useState, useEffect } from 'react';\nimport { POPULAR_BASE_URL } from '../../config';\n\nexport const useHomeFetch = searchTerm => {\n\n    const [state, setState] = useState({ movies: [] });\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(false);\n\n    const fetchMovies = async endpoint => {\n        setError(false);\n        setLoading(true);\n\n        const isLoadMore = endpoint.search('page');\n\n        try {\n            const result = await (await fetch(endpoint)).json();\n            setState(prev => ({\n                ...prev,\n                movies:\n                    isLoadMore !== -1\n                        ? [...prev.movies, ...result.results]\n                        : [...result.results],\n                heroImage: prev.heroImage || result.results[0],\n                currentPage: result.page,\n                totalPages: result.total_pages\n            }));\n        } catch (error) {\n            setError(true);\n            console.log(error);\n        }\n\n        setLoading(false);\n    }\n\n    useEffect(() => {\n        if (sessionStorage.homeState) {\n            setState(JSON.parse(sessionStorage.homeState));\n            setLoading(false);\n        } else {\n            fetchMovies(POPULAR_BASE_URL);\n        }\n    }, [])\n\n    useEffect(() => {\n        if (!searchTerm) {\n            sessionStorage.setItem('homeState', JSON.stringify(state));\n        }\n    }, [searchTerm, state])\n    return [{ state, loading, error }, fetchMovies];\n\n}","import styled from 'styled-components';\n\nexport const StyledNavigation = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  height: 70px;\n  background: #353535;\n  color: #fff;\n\n  .navigation-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 0 20px;\n    width: 100%;\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 22px;\n      float: left;\n      color: #fff;\n      padding-right: 10px;\n      text-decoration: none;\n\n      @media screen and (max-width: 768px) {\n        font-size: 16px;\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from '@reach/router';\nimport { StyledNavigation } from '../styles/StyledNavigation';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({ movie }) => (\n    <StyledNavigation>\n        <div className=\"navigation-content\">\n            <Link to=\"/\">\n                <p>Home</p>\n            </Link>\n            <p>|</p>\n            <p>{movie}</p>\n        </div>\n    </StyledNavigation>\n)\n\nNavigation.propTypes = {\n    movie: PropTypes.string,\n}\nexport default Navigation;","import styled from 'styled-components';\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from '../../config';\n\nexport const StyledMovieInfo = styled.div`\n  background: ${props =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : '#000'};\n  background-size: cover !important;\n  background-position: center !important;\n  width: 100%;\n  padding: 40px 20px;\n  box-sizing: border-box;\n  animation: animateMovieinfo 1s;\n\n  .movieinfo-content {\n    max-width: 1280px;\n    min-height: 450px;\n    margin: 0 auto;\n    background: rgb(0, 0, 0, 0.7);\n    border-radius: 20px;\n    position: relative;\n  }\n\n  .movieinfo-thumb {\n    width: 300px;\n    float: left;\n\n    @media screen and (max-width: 768px) {\n      width: 100% !important;\n    }\n  }\n\n  .movieinfo-text {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 40px;\n    color: #fff;\n    overflow: hidden;\n\n    h1 {\n      font-family: 'Abel', sans-serif;\n      font-size: 48px;\n      margin: 0;\n\n      @media screen and (max-width: 1000px) {\n        font-size: 32px !important;\n      }\n    }\n\n    h3 {\n      font-size: 16px;\n      line-height: 0;\n      margin-top: 30px;\n    }\n\n    p {\n      font-family: 'Abel', sans-serif;\n      font-size: 18px;\n      line-height: 26px;\n    }\n  }\n\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n\n  .director {\n    margin: 0 0 0 40px;\n\n    p {\n      margin: 0;\n    }\n  }\n\n  @media screen and (max-width: 768px) {\n    min-height: 600px;\n    height: auto;\n  }\n\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoImage from '../images/no_image.jpg';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\n\nimport MovieThumb from './MovieThumb';\n\nimport { StyledMovieInfo } from '../styles/StyledMovieInfo';\n\nconst MovieInfo = ({ movie }) => {\n    return < StyledMovieInfo backdrop={movie.backdrop_path} >\n        <div className=\"movieinfo-content\">\n            <div className=\"movieinfo-thumb\">\n                <MovieThumb\n                    image={\n                        movie.poster_path\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n                            : NoImage\n                    }\n                    clickable={false}\n                />\n            </div>\n            <div className=\"movieinfo-text\">\n                <h1>{movie.title}</h1>\n                <h3>PLOT</h3>\n                <p>{movie.overview}</p>\n                <div className=\"rating-director\">\n                    <div>\n                        <h3>IMDB RATING</h3>\n                        <div className=\"score\">{movie.vote_average}</div>\n                    </div>\n                    <div className=\"director\">\n                        <h3>DIRECTOR{movie.directors.length > 1 ? 'S' : ''}</h3>\n                        {movie.directors.map(element => (\n                            <p key={element.credit_id}>\n                                {element.name}\n                            </p>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n\n    </StyledMovieInfo >\n\n}\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object,\n    directors: PropTypes.array,\n}\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import styled from 'styled-components';\n\nexport const StyledMovieInfoBar = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  min-height: 100px;\n  height: auto;\n  background: #1c1c1c;\n  padding: 20px;\n  box-sizing: border-box;\n  font-family: 'Abel', sans-serif;\n  font-size: 20px;\n\n  .movieinfobar-content {\n    max-width: 1280px;\n    width: 100%;\n    margin: 0 auto;\n    color: #fff;\n  }\n\n  .movieinfobar-content-col {\n    float: left;\n    width: 33.33%;\n    box-sizing: border-box;\n    padding: 10px 20px 0 0;\n  }\n\n  .movieinfobar-info {\n    padding: 5px 0 0 10px;\n    float: left;\n  }\n\n  .fa-time,\n  .fa-revenue {\n    float: left;\n    margin-top: -4px;\n  }\n\n  .fa-budget {\n    float: left;\n    margin-top: -3px;\n  }\n\n  @media screen and (max-width: 768px) {\n    .fa-time,\n    .fa-revenue,\n    .fa-budget {\n      display: none;\n    }\n  }\n\n  @media screen and (max-width: 425px) {\n    font-size: 14px;\n  }\n`;\n","import React from 'react';\nimport FontAwesome from 'react-fontawesome';\nimport PropTypes from 'prop-types';\nimport { calcTime, convertMoney } from '../../helpers';\n\nimport { StyledMovieInfoBar } from '../styles/StyledMovieInfoBar';\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n    <StyledMovieInfoBar>\n        <div className=\"movieinfobar-content\">\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Running time: {calcTime(time)}\n                </span>\n            </div>\n\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Budget: {convertMoney(budget)}\n                </span>\n            </div>\n\n            <div className=\"movieinfobar-content-col\">\n                <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\n                <span className=\"movieinfobar-info\">\n                    Revenue: {convertMoney(revenue)}\n                </span>\n            </div>\n        </div>\n    </StyledMovieInfoBar>\n);\n\nMovieInfoBar.propTypes = {\n    time: PropTypes.number,\n    budget: PropTypes.number,\n    revenue: PropTypes.number,\n}\n\nexport default MovieInfoBar;\n","import styled from 'styled-components';\n\nexport const StyledActor = styled.div`\n  font-family: 'Abel', sans-serif;\n  color: #fff;\n  background: #1c1c1c;\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n\n  img {\n    display: block;\n    width: 100%;\n    height: 200px;\n    object-fit: cover;\n    border-radius: 15px;\n  }\n\n  .actor-name {\n    display: block;\n    font-size: 18px;\n    margin: 10px 0 0 0;\n  }\n\n  .actor-character {\n    display: block;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoImage from '../images/no_image.jpg';\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\nimport { StyledActor } from '../styles/StyledActor';\n\n\nconst Actor = ({ actor }) => (\n    <StyledActor>\n        <img src={actor.profile_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n            : NoImage}\n            alt=\"actorthumb\"\n        />\n        <span className=\"actor-name\">{actor.name}</span>\n        <span className=\"actor-character\">{actor.character}</span>\n        }\n</StyledActor>\n)\n\nActor.propTypes = {\n    actor: PropTypes.object,\n}\nexport default Actor;\n","import { useState, useEffect, useCallback } from 'react';\nimport { API_URL, API_KEY } from '../../config';\n\nexport const useMovieFetch = movieId => {\n    const [state, setState] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const fetchData = useCallback(async () => {\n        setError(false);\n        setLoading(true);\n\n        try {\n            const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n            const result = await (await fetch(endpoint)).json();\n\n            const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n            const creditsResult = await (await fetch(creditsEndpoint)).json();\n            const directors = creditsResult.crew.filter(\n                member => member.job === 'Director'\n            );\n\n            setState({\n                ...result,\n                actors: creditsResult.cast,\n                directors,\n            })\n        } catch (error) {\n            setError(true);\n        }\n        setLoading(false);\n    }, [movieId])\n\n    useEffect(() => {\n        if (localStorage[movieId]) {\n            setState(JSON.parse(localStorage[movieId]));\n            setLoading(false);\n        } else {\n            fetchData();\n        }\n    }, [fetchData, movieId])\n\n    useEffect(() => {\n        localStorage.setItem(movieId, JSON.stringify(state));\n\n    }, [movieId, state])\n\n    return [state, loading, error];\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\n\nimport Navigation from './elements/Navigation';\nimport MovieInfo from './elements/MovieInfo';\nimport MovieInfoBar from './elements/MovieInfoBar';\nimport Actor from './elements/Actor';\nimport Grid from './elements/Grid';\nimport Spinner from './elements/Spinner';\n\nimport { useMovieFetch } from './hooks/useMovieFetch';\n\n\nconst Movie = ({ movieId }) => {\n    const [movie, loading, error] = useMovieFetch(movieId);\n\n    if (error) return <div>Something went wrong...</div>;\n    if (loading) return <Spinner />;\n\n    return (\n        <>\n            <Navigation movie={movie.original_title} />\n            <MovieInfo movie={movie} />\n            <MovieInfoBar\n                time={movie.budget}\n                budget={movie.budget}\n                revenue={movie.revenue}\n            />\n            <Grid header=\"Actors\">\n                {movie.actors.map(actor => (\n                    < Actor key={actor.credit_id} actor={actor} />\n                ))}\n\n            </Grid>\n        </>\n    )\n};\n\nMovie.propTypes = {\n    movie: PropTypes.object,\n}\nexport default Movie;","import React from 'react';\n\nconst NotFound = () => <div> Whoooops ... nothing found here...</div>\n\nexport default NotFound;","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n`;\n","import React from 'react';\n\nimport Header from './elements/Header';\nimport Home from './Home';\nimport { Router } from '@reach/router';\nimport Movie from './Movie';\nimport NotFound from './NotFound';\n\nimport { GlobalStyle } from './styles/GlobalStyle';\n\nconst App = () => (\n    <>\n        <Header />\n        <Router>\n            <Home path=\"/\" />\n            <Movie path=\"/:movieId\" />\n            <NotFound default />\n        </Router>\n        <GlobalStyle />\n    </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no_image.31f5bb1d.jpg\";"],"sourceRoot":""}